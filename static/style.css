html {
    height: 100%;
    overflow: hidden;
}

body {
    display: flex;
    flex-direction: column;
    height: 100vh;
    margin: 0;
    padding: 10px;
    box-sizing: border-box;
    font-family: 'Courier New', Courier, monospace;
    background-color: #1a1a1a;
    color: #e0e0e0;
    align-items: center;
    overflow-y: hidden;
}

#commandLog,
#gameCanvasContainer, /* Renamed for clarity with overlay */
#mainHeaderStatus,
#commandInputBox {
    width: 100%;
    box-sizing: border-box;
}

#commandLog {
    max-width: 740px;
    height: 250px;
    flex-shrink: 0;
    border: 1px solid #303030;
    background-color: #111111;
    padding: 10px;
    margin-bottom: 15px;
    overflow-y: auto;
    font-size: 0.9em;
    border-radius: 3px;
    line-height: 1.4;
}

.log-entry {
    margin-top: 5px;
    word-wrap: break-word;
    white-space: pre-wrap;
}

.log-lore { color: #FFFFFF; }
.log-system { color: #5D9CEC; font-style: italic; }
.log-event-good { color: #33CC33; }
.log-event-bad { color: #FF4136; font-weight: bold; }
.log-user-input { color: #AAAAAA; }

/* Container for gameCanvas and rainOverlay to manage positioning */
#gameCanvasContainer {
    position: relative; /* For absolute positioning of rainOverlay */
    max-width: 700px;
    margin-bottom: 15px;
    /* The container itself will take width of gameCanvas */
    /* It needs to be an inline-block or have specific width to wrap gameCanvas correctly */
    display: inline-block; /* So it shrink-wraps if gameCanvas does */
}

#gameCanvas {
    /* max-width: 700px; /* Max width set on container now */
    white-space: pre;
    line-height: 1.0;
    font-size: 16px;
    border: 1px solid #333333;
    padding: 20px;
    color: #c8c8c8;
    background-color: #0f0f0f;
    text-align: left;
    min-height: 300px; /* Kept for a decent game area size */
    /* flex-grow: 1; /* If body was arranging it directly, but now it's in a container */
    width: auto; /* Let text content determine width */
    display: block; /* Or inline-block, depending on desired layout within container */
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5) inset;
    border-radius: 3px;
    /* margin-bottom: 15px; /* Margin now on container */
    font-family: "Consolas", "Lucida Console", "Courier New", monospace;
    position: relative; /* Ensure it's a stacking context if needed, though overlay is sibling */
    z-index: 1; /* Game canvas content */
}

#rainOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none; /* Allows clicks to pass through to gameCanvas */
    overflow: hidden; /* Clip raindrops that might go slightly outside */
    z-index: 2; /* Rain on top of gameCanvas content */
}

.raindrop {
    position: absolute;
    bottom: 100%; /* Start above the overlay */
    width: 1px;
    height: 50px; /* Length of the raindrop */
    background: linear-gradient(to bottom, rgba(173, 216, 230, 0), rgba(173, 216, 230, 0.4)); /* Faded light blue */
    animation: fall linear infinite;
}

@keyframes fall {
    to {
        transform: translateY(calc(100vh + 50px)); /* Fall past the bottom of the viewport height + own height */
        /* Using viewport height as a fallback, ideally it's parent's height */
    }
}


#mainHeaderStatus {
    max-width: 740px;
    font-size: 1.2em;
    font-weight: bold;
    color: #275E8C;
    padding: 10px 15px;
    margin-bottom: 15px;
    background-color: #2a2a2a;
    border-radius: 5px;
    box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.2);
    text-align: center;
    flex-shrink: 0;
}

#commandInputBox {
    max-width: 740px;
    padding: 15px;
    background-color: #202020;
    border-radius: 5px;
    border: 1px solid #303030;
    display: flex;
    flex-direction: column;
    align-items: center;
    flex-shrink: 0;
    margin-top: auto;
}


#commandForm {
    display: flex;
    align-items: center;
    width: 100%;
    max-width: 700px;
    justify-content: center;
    font-family: "Consolas", "Lucida Console", "Courier New", monospace;
}

#commandForm label {
    color: #b0b0b0;
    margin-right: 10px;
    font-weight: bold;
    white-space: nowrap;
}

#commandText {
    background-color: #282828;
    color: #e0e0e0;
    border: 1px solid #444444;
    padding: 8px 10px;
    border-radius: 4px;
    font-size: 1em;
    flex-grow: 1;
    min-width: 150px;
    margin-right: 10px;
    font-family: inherit;
}

#commandText:focus {
    outline: none;
    border-color: #5D9CEC;
    box-shadow: 0 0 8px rgba(93, 156, 236, 0.4);
}

/* Removed .valid-command-input class */

#commandForm button {
    background-color: #383838;
    color: #e0e0e0;
    border: 1px solid #555555;
    padding: 8px 18px;
    cursor: pointer;
    border-radius: 4px;
    font-weight: bold;
    font-size: 1em;
    white-space: nowrap;
    font-family: "Consolas", "Lucida Console", "Courier New", monospace;
}

#commandForm button:hover {
    background-color: #484848;
    border-color: #5D9CEC;
    color: #5D9CEC;
}